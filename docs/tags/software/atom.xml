<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.63.1">Hugo</generator><title type="html"><![CDATA[software on KevOps]]></title>
    
    
    
            <link href="https://kevingimbel.de/tags/software/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://kevingimbel.de/tags/software/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://kevingimbel.de/tags/software/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
    <updated>2020-01-26T16:54:45+01:00</updated>
    
    
    
    
        <id>https://kevingimbel.de/tags/software/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Brackets vs. Sublime Text]]></title>
            <link href="https://kevingimbel.de/blog/2013/12/brackets-vs.-sublime-text/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://kevingimbel.de/blog/2013/10/from-0-to-sass/?utm_source=atom_feed" rel="related" type="text/html" title="From 0 To Sass" />
            
                <id>https://kevingimbel.de/blog/2013/12/brackets-vs.-sublime-text/</id>
            
            
            <published>2013-12-25T00:00:00+00:00</published>
            <updated>2013-12-25T00:00:00+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>I first tried <a href="http://brackets.io">Brackets</a> back in my Windows time. It was a very early version, kinda heavy and wonky and not what I wanted from an editor I use on a daily base at all. Just today I decided to give it a second look because beside <a href="http://www.vim.org/">VIM</a> it is <em>the</em> editor I read quite a lot about latly. My first impression was: &ldquo;<em>Wow, that&rsquo;s a simple, clean editor!</em>&rdquo; - exactly the thing I liked so much about Sublime Text 2 which I&rsquo;ve been using for the last two years or so.</p>
<h2 id="functionality">Functionality</h2>
<h3 id="highlighting">Highlighting</h3>
<p>Bracket as well as Sublime Text comes with Syntax Highlighting for almost everything one needs: HTML, SCSS, CSS, JavaScript, Ruby, Python - all of these can be highlighted by default which, in my opinion, is a standard these days. However, as far as I can tell it is easier to customize the Highlight settings in Sublime Text (2) and with the standard Monokai Theme Sublime has a better highlighting than Brackets. Another point is that there is no way (as far as I found) to set a highlight language before saving a file in Brackets - so I can&rsquo;t have Markdown Highlighting for this post unless I save it once which is possible in Sublime Text.</p>
<h3 id="plugins--installation">Plugins + Installation</h3>
<p>Both editor support additional plugins to enhance the workflow. Both support <a href="http://emmet.io">Emmet</a> which is by far my most needed Plugin as well as FTP Solutions to upload on safe. Both of these are important plugin for my workflow because when developing on a (S)FTP Dev System uploading on save without another program running is a lot faster. I love it. In Sublime Text the easiest way to add new Plugin is through the <a href="https://sublime.wbond.net/installation">Package Controller</a> - Brackets comes with a build-in Package Manager that makes it super easy to add new Plugins. Here the point goes to Brackets for already build-in Package Management.</p>
<h3 id="ui--ux">UI / UX</h3>
<p>Both Editors have a clean and simple to understand UI. The only real difference that&rsquo;s notable in my opinion is that Brackets has open files on the top-left sidebar while Sublime Text has them on top organized as tabs (as well as in the sidebar when displayed). This is a difference at first when you come from Sublime Text and in my opinion it&rsquo;s easier to have open files at the top. Nevertheless in both editors it&rsquo;s possible to go through all open files by hitting <code>CMD + Tab</code> which comes very handy. A huge downside of Brackets is that it&rsquo;s not possible to have new files unsaved and then close the editor. In Sublime unsaved files stays as unsaved inside the editor until it is opened the next time. I really like this because in case of a sudden system crash, an electricity failure or whatever else files can still be found after re-booting. Highfive Sublime Text.</p>
<p>~Another thing I really miss in Brackets and I got unbelievable used to is multi-select. In Sublime Text it&rsquo;s possible to select multiple points inside a document when holding CMD while clicking inside the document so you can edit as many rows as you want at once - unbelievable useful!~<br>
As <a href="https://github.com/GuidoJansen">Guido Jansen</a> pointed out in <a href="https://github.com/kevingimbel/kevingimbel.github.io/issues/4">Issue #4</a> brackets now supports multiple lines.</p>
<h3 id="live-preview">Live Preview</h3>
<p>Bracket comes with a Live Preview functionality that allows to display a file inside the browser that&rsquo;ll be updated in real time as you type. I couldn&rsquo;t think of a scenario where I&rsquo;d need a real-time preview of my file to be honest but it&rsquo;s a cool feature anyway.</p>
<h3 id="auto-complete">Auto-Complete</h3>
<p>Both Sublime Text and Brackets have auto-complete for CSS. While Sublime Text &ldquo;only&rdquo; supports basic auto-complete (e.g. typing <code>'hei' + tab</code> will get you <code>height: </code>) Brackets supports to &ldquo;Quick Edit&rdquo; colors (right-click on a color or use <code>CMD+E</code> when hovering it) to bring up a color dialog as show below. This is a nice feature when trying to find a color.</p>
<p><img src="https://i.kevingimbel.me/sc/screenshot-53-24.png" alt="Quick Edit Colors in Brackets" title="Quick Edit Colors in Brackets"></p>
<p>Another thing both support is the auto-closing of HTML tags (e.g. <code>&lt;article&gt;</code> will get you <code>&lt;article&gt;&lt;/article&gt;</code>).
Unfortunately Brackets does not query SCSS variables. When you define your variables in Sublime and type <code>$color--</code> Sublime Text shows all variables starting with <code>$color--</code> - that&rsquo;s a thing I really miss in Brackets.</p>
<h3 id="debugging">Debugging</h3>
<p>Brackets comes with build-in JSHint support which is really useful especially for JavaScript beginners like I&rsquo;m one. You can see in-editor what errors you made - really great!
I&rsquo;m pretty sure there&rsquo;s a Sublime Text Plugin for this, too but having it build-in is just a great feature. What I&rsquo;m missing on the other hand is spell-checking. As non-native English speaker spell-checking is always a great thing.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I&rsquo;m impressed by Brackets, it&rsquo;s a simple and great editor and I&rsquo;ll definitely keep an eye on it. It&rsquo;s a good, free alternative to Sublime Text 2 (which costs 75$) and worth a try. However, depending on my current workflow I&rsquo;ll stick to Sublime Text for most of my work.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://kevingimbel.de/categories/coding" term="coding" label="coding" />
                             
                                <category scheme="https://kevingimbel.de/categories/tools" term="tools" label="tools" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://kevingimbel.de/tags/tooling" term="tooling" label="tooling" />
                             
                                <category scheme="https://kevingimbel.de/tags/software" term="software" label="software" />
                             
                                <category scheme="https://kevingimbel.de/tags/editor" term="editor" label="editor" />
                            
                        
                    
                
            
        </entry>
    
</feed>
