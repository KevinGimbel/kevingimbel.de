<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us"><generator uri="https://gohugo.io/" version="0.70.0">Hugo</generator><title type="html">vim on KevOps</title><link href="https://kevingimbel.de/tags/vim/" rel="alternate" type="text/html" title="HTML"/><link href="https://kevingimbel.de/tags/vim/index.xml" rel="alternate" type="application/rss+xml" title="RSS"/><link href="https://kevingimbel.de/tags/vim/atom.xml" rel="self" type="application/atom+xml" title="Atom"/><updated>2020-05-07T09:43:34+02:00</updated><id>https://kevingimbel.de/tags/vim/</id><entry><title type="html">Getting into vim - again</title><link href="https://kevingimbel.de/blog/2015/01/getting-into-vim-again/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://kevingimbel.de/blog/2014/07/noobish-vim/?utm_source=atom_feed" rel="related" type="text/html" title="Noobish VIM"/><link href="https://kevingimbel.de/blog/2014/05/vim-first-impression/?utm_source=atom_feed" rel="related" type="text/html" title="Vim - first impression"/><link href="https://kevingimbel.de/blog/2014/06/useful-web-developer-tools/?utm_source=atom_feed" rel="related" type="text/html" title="Useful Web Developer Tools"/><link href="https://kevingimbel.de/blog/2013/12/brackets-vs.-sublime-text/?utm_source=atom_feed" rel="related" type="text/html" title="Brackets vs. Sublime Text"/><id>https://kevingimbel.de/blog/2015/01/getting-into-vim-again/</id><published>2015-01-21T00:00:00+00:00</published><updated>2015-01-21T00:00:00+00:00</updated><content type="html"><![CDATA[<p>It&rsquo;s been some time since I first got my fingers on VIM. My first impression was - as everyones I guess - pretty bad.
VIM is not that easy to understand, yet a powerful, shortcut-based, distraction free editor. I&rsquo;ve already written about
<a href="/noobish-vim/">turning Sublime Text into VIM mode</a> and my <a href="/vim-first-impressions/">very first VIM impression</a>, but
back then I just copy &amp; pasted everything I found on the Internet into my <code>.vimrc</code>. Now with the new year I thought some
new thing to learn could be fun and I got back into <em>really</em> working with VIM.</p>
<h2 id="config-first">Config first</h2>
<p>The past week I&rsquo;ve done all my daily work at <a href="http://synoa.de">Synoa</a> in VIM. My current <code>.vimrc</code> is divided into 4
sections which I&rsquo;ll explain below.</p>
<h3 id="plugins">Plugins</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim"><span style="color:#75715e">&#34; Enable Pathogen to manage plugins</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">execute</span> <span style="color:#a6e22e">pathogen</span>#<span style="color:#a6e22e">infect</span>()<span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>I&rsquo;ve replaced Vundle with Pathogen to load Plugins because to my (still noobish) eye it looks better and more easy to
use. Pathogen auto-loads all Plugins that are placed inside <code>~/.vim/bundle/</code> - currently the only Plugin I&rsquo;m using is
Emmet, because I&rsquo;d never ever use an editor again that&rsquo;s missing Emmet. The way Emmet works in VIM is a little bit weird
because of the different modes and key mappings when you come from a Sublime Text 2/3 background. Basically, you need to
hit <code>[CTRL]+[C]+[,]</code> after every Emmet snippet - beside that it works as expected.</p>
<h3 id="writin-style-and-syntax">Writin style and syntax</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim"><span style="color:#75715e">&#34; enable syntax highlighting</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">syntax</span> <span style="color:#a6e22e">on</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34;setting the terminal color to 256 and theme</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; to Bad Wolf, which is places in ~/.vim/colors</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">t_Co</span>=<span style="color:#ae81ff">256</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">colorscheme</span> <span style="color:#a6e22e">badwolf</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">showmode</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">showcmd</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">modeline</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">ruler</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34; line number</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">number</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">expandtab</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">backspace</span>=<span style="color:#a6e22e">indent</span>,<span style="color:#a6e22e">eol</span>,<span style="color:#a6e22e">start</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">smartindent</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">formatoptions</span>+=<span style="color:#a6e22e">t</span> <span style="color:#75715e">&#34; wikia said I need this</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">tw</span>=<span style="color:#ae81ff">120</span> <span style="color:#75715e">&#34; text width</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">colorcolumn</span>=<span style="color:#ae81ff">120</span> <span style="color:#75715e">&#34; adds a ruler to the right side of Vim</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">scrolloff</span>=<span style="color:#ae81ff">15</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">wmh</span>=<span style="color:#ae81ff">0</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>I must admit that most of the VIM syntax and writing styles is still copy pasted from all over the Internet. In the
first block I&rsquo;m setting the colorshemes and basic VIM UI (show mode, show CMD, have a mode line; use a ruler). In the
second block there&rsquo;s settings for line numbers (always nice to have!) and tab width (2 spaces, always), smartindent (so
new lines can be auto-indented), general text width (where to place the ruler), scroll off by X lines so I never scroll
down to the end of the screen and the wmh (window min height) - this one is used so tabs in split view don&rsquo;t take up any
space.</p>
<h3 id="key-mappings">Key mappings</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim"><span style="color:#75715e">&#34; The &lt;Enter&gt; command behind each mapping executes the</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; command directly. Otherwise the command would be written</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; to the VIM &#39;console&#39; thing</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; start spell checking when hitting F5</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">F5</span>&gt; :<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">spell</span> <span style="color:#a6e22e">spelllang</span>=<span style="color:#a6e22e">en_us</span> &lt;<span style="color:#a6e22e">Enter</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; switch to previous tab</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">nmap</span> &lt;<span style="color:#a6e22e">F2</span>&gt; :<span style="color:#a6e22e">tabp</span> &lt;<span style="color:#a6e22e">Enter</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; switch to next tab</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">nmap</span> &lt;<span style="color:#a6e22e">F3</span>&gt; :<span style="color:#a6e22e">tabn</span> &lt;<span style="color:#a6e22e">Enter</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34; hold CTRL + k (up) or j (down)</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">J</span>&gt; &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">W</span>&gt;<span style="color:#a6e22e">j</span>&lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">W</span>&gt;<span style="color:#a6e22e">_</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">K</span>&gt; &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">W</span>&gt;<span style="color:#a6e22e">k</span>&lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">W</span>&gt;<span style="color:#a6e22e">_</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; remove information in which line the non-active file currently is</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34; auto-expand path (opening files like :tabedit %%/)</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">cabbr</span> &lt;<span style="color:#a6e22e">expr</span>&gt; %% <span style="color:#a6e22e">expand</span>(<span style="color:#e6db74">&#39;%:p:h&#39;</span>)<span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>Mostly my key mappings have stayed the same, F5 is used for spell checking (which comes very handy!), F2 and F3 are used
to navigate between open tabs. The important part here is the <code>&lt;Enter&gt;</code> behind each command. This way the command will
be executed immediately, otherwise it is written into the little command line at the bottom of VIM.</p>
<p>New here is the mapping to switch between split view windows. When opening a new file with <code>:sp</code> I can now navigate
using <code>[CTRL]+[C]</code> and <code>j</code> to go &ldquo;down&rdquo; or <code>k</code> to go up - this is really handy.</p>
<p>The last line has been the break-through for me in beeing productive with VIM. When working with Magento and CSS, I
often need to open many files in the same directory, yet I tend to start inside the root. Normally I&rsquo;d have to write all
the path to where I am, like <code>:tabedit skin/frontend/namespace/default/scss/</code> when I&rsquo;m inside a Magento skin folder.
With this little helper I can type <code>:tabedit %%/</code> and once I write the <code>/</code> the path will expand to the current
directory.</p>
<h3 id="no-backups-no-swap">No backups, no swap!</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim"><span style="color:#75715e">&#34; No backups and no swap file</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">nobackup</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">noswapfile</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>The last part is still the same. Since I&rsquo;m using git and branches for everything I don&rsquo;t need any kind of backup or swap
file since I could always revert anything.</p>
<h2 id="working-in-vim">Working in VIM</h2>
<p>With these configurations I started to work in VIM. I tried changing and adjusting the themes a bit and in the end found my
self with a dark theme (bad wolf; a Doctor Who reference!) after using Tomorrow Night (light) for almost half a year. So
far after seven days the only thing I&rsquo;m really missing from time to time is Sublime Texts Multi Cursor Feature and
&ldquo;Search in Folder&rdquo; to find stuff inside the whole project. There are plugins for the later feature and multi cursor
editing can be archive using weird, cryptic command combinations but I&rsquo;m not familiar yet with either of these. So far I
enjoy the destraction free enviorment I&rsquo;m working in and only start Sublime Text when I can&rsquo;t find a particular
template.</p>
<p>Since I&rsquo;ve used Sublime Text in Vintage Mode for almost 6 months I&rsquo;m feeling comfortable enough with the basic
operations of using <code>y</code>ank, <code>d</code>elete or <code>p</code>ut to move around lines and edit code, <code>dit</code> (delete in tags) or <code>ei&quot;</code> (edit
iin &ldquo;) are things I don&rsquo;t use that often because they take too much time when they don&rsquo;t work right from the start.</p>
<p>Other then some hardcore-users I&rsquo;m also using my mouse wheel and the arrow keys to navigate inside VIM. I feel a lot
more comfortable doing it this way than I&rsquo;d feel using only <code>h, j, k, l</code>. After all I liked to get into VIM and I&rsquo;ll see
how it can benefit to my workflow or if it&rsquo;ll stay in my way at the end - like all other editors I&rsquo;ve tried - and I&rsquo;ll
return to my beloved Sublime Text 3.</p>
<p>Keep up with my advimtures (ha punny!) by subscribing to the <a href="/atom.xml">Atom Feed</a> or by following me on
<a href="https://twitter.com/_kevinatari">Twitter</a>:</p>
]]></content><category scheme="https://kevingimbel.de/categories/coding" term="coding" label="coding"/><category scheme="https://kevingimbel.de/categories/tools" term="tools" label="tools"/><category scheme="https://kevingimbel.de/tags/vim" term="vim" label="vim"/><category scheme="https://kevingimbel.de/tags/editor" term="editor" label="editor"/><category scheme="https://kevingimbel.de/tags/tools" term="tools" label="tools"/></entry><entry><title type="html">Noobish VIM</title><link href="https://kevingimbel.de/blog/2014/07/noobish-vim/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://kevingimbel.de/blog/2014/05/vim-first-impression/?utm_source=atom_feed" rel="related" type="text/html" title="Vim - first impression"/><link href="https://kevingimbel.de/blog/2013/12/brackets-vs.-sublime-text/?utm_source=atom_feed" rel="related" type="text/html" title="Brackets vs. Sublime Text"/><id>https://kevingimbel.de/blog/2014/07/noobish-vim/</id><published>2014-07-13T00:00:00+00:00</published><updated>2014-07-13T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Since I&rsquo;m still trying to really get why so many (Front-End) Devs love VIM I tried to find a &ldquo;good&rdquo; way to integrate it
into my daily workflow. Since I&rsquo;m working in a relativley small company it&rsquo;s most of the time stressy to get all things
done and to keep an overview - so long story short: There&rsquo;s not much time for new tools that don&rsquo;t increase my workflow
directly. VIM is one of these tools that don&rsquo;t fully support my workflow at the moment. While on one hand being good at
dealing with text and stuff, it is on the other hand (not-so-easily) capable of stuff like (S)FTP sync, auto complete
through Emmet (I still don&rsquo;t really get how this works in VIM) and the most important thing: It&rsquo;s hard to switch from
Sublime Text. I&rsquo;m so used to Sublime Text and it&rsquo;s shortcuts, multi-cursor, easy-to-use UI, plugins and what so not.</p>
<p>Anyway, there is a way to make Sublime Text behave more vim-ish. Originally I was searching for a Plugin or something or
a config file to get some VIM keybindings into my safe-zone Sublime Text enviroment. Turns out Sublime Test has this
built-in. In the &ldquo;ignore_packages&rdquo; settings is a package called &ldquo;Vintage&rdquo;. If this line is changed like seen below</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">	// ignore nothing 
	<span style="color:#e6db74">&#34;ignored_packages&#34;</span>: <span style="color:#f92672">[]</span>
</code></pre></div><p>Sublime Text will switch into &ldquo;Vintage&rdquo; mode which basically is VIM-like. It will have the default VIM modes (Command,
Insert, Visual) and all the keybindings. By default it will still start in Insert Mode, to switch this just set the
following inside the user settings:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">	// always start/open files in Command Mode 
	<span style="color:#e6db74">&#34;vintage_start_in_command_mode&#34;</span>: true
</code></pre></div><p>With these two settings Sublime Text is ready to run in Vi(m|n)tage mode. This means in particular most (or all?) Vim
commands are available and can be used such as ci&rdquo; (change in &ldquo;&quot;), x or r (delete character; replace character below the
cursor in command mode), y and p (yank and put; copy/paste) and so on. I&rsquo;ve been working this way for about one week now
and I must say that I really like it. It doesn&rsquo;t hold me back, I can still enjoy my other plugins and if I&rsquo;m ever
feeling lost I can still use all of Sublime Text&rsquo;s features. So that&rsquo;s it, my current setup to get a around some VIM
stuff while still being productive and fast daily. In my free-time and when writing articles I&rsquo;ve almost switched
completly to VIM to dig into it and see if it can replace Sublime Text one day.</p>
]]></content><category scheme="https://kevingimbel.de/categories/coding" term="coding" label="coding"/><category scheme="https://kevingimbel.de/categories/tools" term="tools" label="tools"/><category scheme="https://kevingimbel.de/tags/vim" term="vim" label="vim"/><category scheme="https://kevingimbel.de/tags/editor" term="editor" label="editor"/></entry><entry><title type="html">Vim - first impression</title><link href="https://kevingimbel.de/blog/2014/05/vim-first-impression/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://kevingimbel.de/blog/2013/12/brackets-vs.-sublime-text/?utm_source=atom_feed" rel="related" type="text/html" title="Brackets vs. Sublime Text"/><id>https://kevingimbel.de/blog/2014/05/vim-first-impression/</id><published>2014-05-26T00:00:00+00:00</published><updated>2014-05-26T00:00:00+00:00</updated><content type="html"><![CDATA[<p>When I first looked at Vim it was a very short experience that was literally as follows</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">	<span style="color:#75715e"># from the command line</span>
	vim test.md
	*vim opens*
	<span style="color:#e6db74">&#34;What&#39;s that?&#34;</span>
	*CTRL + C* 
	<span style="color:#e6db74">&#34;How do I even close this?!&#34;</span>
	*opens browser, googles <span style="color:#e6db74">&#34;how to close VIM&#34;</span>*
	ESC + :q
</code></pre></div><p>That was it and that was my Vim experience for quite some time. However, lately I see more and more people talking
about Vim being the single best editor for everything - no matter what language one writes. A site notice here: I
still use Sublime Text (2) daily and love it, I have it configured as I like, have all my Plugin and color schemes
and it just feels great. I tried some other editors like <a href="/brackets-vs-sublime-text/">Brackets</a> and
<a href="https://atom.io">Atom</a>, also <a href="http://www.jetbrains.com/webstorm/">WebStorm</a> and <a href="http://www.jetbrains.com/phpstorm/">PhpStorm</a>. The later two are great as IDEs but are not the way I like to write code because both are a lot slower than a
simple text editor like atom, sublime of vim. I guess that&rsquo;s the downside of having an IDE - for me it was too much (I still recommend
trying them, maybe they enhance your workflow). Atom is really like a  clone of Sublime Text running Web Technologies at
it&rsquo;s heart (Sublime Text is written in Python).</p>
<p><img src="https://i.kevingimbel.me/sc/vim_markdown.png" alt="&ldquo;Vim while writing a article&rdquo;" title="Vim while writing an article"></p>
<p>Anyway, back to Vim. Vim is, what surprised me first, a command line-based editor, there is a Graphic UI version called
gVim but I wanted to see how I can customize the command line one. Just like the normal bash has a
<code>.bashrc</code> Vim has its own <code>.vimrc</code> which defines the settings for all its (advanced) functionality and settings. When
you open Vim with from the command line with <code>vim my-file.md</code> you&rsquo;ll see a black editor with some &ldquo;~&rdquo; on the left.
You&rsquo;re now in &ldquo;normal&rdquo; mode and need to tab <code>i</code> to start <code>i</code>nserting stuff. From within the insert mode its really like
any other editor. When you leave the insert mode (by pressing <code>ESC</code>) you&rsquo;re back in the &ldquo;Normal&rdquo; mode where you can
easily navigate through your file and delete stuff. Deleting works pretty cool I guess, just double tab <code>d</code> to delete a
whole sentence or <code>x</code> to delete the character below the cursor. Or fancy stuff like <code>d + arrow up/down</code> to delete a
whole paragraph.</p>
<p>So basically everything in Vim is bound to keys and those keys can be combined (like <code>d</code>elete + up) and I am sure
there&rsquo;s even more power inside Vim when it comes to text manipulation, navigation, replacements, etc. Anyway, as long as
I haven&rsquo;t found out what stuff is possible I&rsquo;ll just share my <code>.vimrc</code> with you.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim">	{% <span style="color:#a6e22e">raw</span> %}<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">	&#34; vim:fdm=marker</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">nocompatible</span> <span style="color:#75715e">&#34; required by Vundle</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">filetype</span> <span style="color:#a6e22e">off</span> <span style="color:#75715e">&#34; required by Vundle</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; Vundle Settings {{{</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">	&#34; set the runtime path to include Vundle and initialize</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">rtp</span>+=~<span style="color:#e6db74">/.vim/</span><span style="color:#a6e22e">bundle</span>/<span style="color:#a6e22e">Vundle</span>.<span style="color:#a6e22e">vim</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">call</span> <span style="color:#a6e22e">vundle</span>#<span style="color:#a6e22e">begin</span>()<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; make Vundle manage itself.</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">Plugin</span> <span style="color:#e6db74">&#39;gmarik/Vundle.vim&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; Emmet - I just can not work without this powerful helper</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">Plugin</span> <span style="color:#e6db74">&#39;mattn/emmet-vim&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; Vim Airline is some kind of fancy status bar thingy I guess.</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">Plugin</span> <span style="color:#e6db74">&#39;bling/vim-airline&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; this needs to be called after all Plugins are loaded</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">call</span> <span style="color:#a6e22e">vundle</span>#<span style="color:#a6e22e">end</span>()<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">filetype</span> <span style="color:#a6e22e">plugin</span> <span style="color:#a6e22e">indent</span> <span style="color:#a6e22e">on</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; }}}</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; Syntax highlighting and vim style {{{</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; enable syntax highlighting</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">syntax</span> <span style="color:#a6e22e">on</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34;setting the color scheme to github, which is places in ~/.vim/colors</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">t_Co</span>=<span style="color:#ae81ff">256</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">colorscheme</span> <span style="color:#a6e22e">Tomorrow</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; vim Airline settings</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">	&#34; set airline to be displayed all the time (default is only in split mode)</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">laststatus</span>=<span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline_left_sep</span> = <span style="color:#e6db74">&#39;▶&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline_right_sep</span> = <span style="color:#e6db74">&#39;◀&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; line number</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">number</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">	&#34; }}}</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; write settings {{{</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">backspace</span>=<span style="color:#a6e22e">indent</span>,<span style="color:#a6e22e">eol</span>,<span style="color:#a6e22e">start</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">smarttab</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">formatoptions</span>+=<span style="color:#a6e22e">t</span> <span style="color:#75715e">&#34; wikia said I need this</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">tw</span>=<span style="color:#ae81ff">120</span> <span style="color:#75715e">&#34; text width</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">colorcolumn</span>=<span style="color:#ae81ff">120</span> <span style="color:#75715e">&#34; addes a ruler to the right side of Vim</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">	&#34; }}}</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">	&#34; No backups and no swap file</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">nobackup</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	<span style="color:#a6e22e">set</span> <span style="color:#a6e22e">noswapfile</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>	{% <span style="color:#a6e22e">endraw</span> %}<span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>So that&rsquo;s quite some stuff I guess. First of all, <a href="https://github.com/gmarik/Vundle.vim">Vundle</a> is the Plugin manager
for Vim, there are others but I chose this one because it is 99% written in VimL. This little thingy helps me keep track
of Plugins I use. Friendly.
<code>syntax on</code> simply turn on syntax highlighting. <code>set t_Co=256</code> sets the terminal colors to 256 colors so the
<code>colorscheme Tomorrow</code> (<a href="https://github.com/chriskempson/tomorrow-theme">here</a>) works. Next up is Airline, a &ldquo;better
statusbar&rdquo; for Vim. I saw this on a screenshot once and searched for it, what I first found was
<a href="https://github.com/Lokaltog/powerline">Powerline</a> but I then saw <a href="https://github.com/bling/vim-airline">Airline</a> and
chose it because it is written in VimL and I - as of now - try to avoid language mixin because I think it&rsquo;s a good idea
to keep Vim &ldquo;clean&rdquo; as long as possible. Airline can show in what mode I am, what Git Branch I&rsquo;m on, and a lot of other
stuff I haven&rsquo;t configured yet. I guess that&rsquo;ll be another blog post. The <code>airline_left_sep</code> and <code>airline_right_sep</code> are
the separators of the statusline (see the screenshot below, the seperators are down after &ldquo;Normal&rdquo; and before the &ldquo;1%&quot;)  which at the moment don&rsquo;t look as cool as I thought - have to fix this. Next up
tabstops, shiftwidth (self explaining), backspace (I&rsquo;ve no idea what this is but saw it in any .vimrc I found)
smarttabs, text width so Vim doesn&rsquo;t write until the end of the screen (I like small gaps to the right) and colorcolumn,
which is a ruler-like thingy to visually show the max text width. Last stuff: No backups, no swap files, according to a blog
post I found this isn&rsquo;t needed when working with version controls such as git.</p>
<p>The weird looking brackets are used to &ldquo;auto-close&rdquo; this section so that when I open my file only the description is
visible - this makes a long <code>.vimrc</code> a lot more readable.</p>
<p><img src="https://i.kevingimbel.me/sc/sc-26-01-13.png" alt="Vim with auto-closed sections" title="Vim with auto-closed sections"></p>
<p>So that&rsquo;s it, my tiny Vim experience and setup. As with every config things you can grab a copy of my <code>.vimrc</code> in the
<a href="https://github.com/kevingimbel/config/blob/master/.vimrc">Github Config Repo</a>.</p>
]]></content><category scheme="https://kevingimbel.de/categories/coding" term="coding" label="coding"/><category scheme="https://kevingimbel.de/categories/tools" term="tools" label="tools"/><category scheme="https://kevingimbel.de/tags/editor" term="editor" label="editor"/><category scheme="https://kevingimbel.de/tags/vim" term="vim" label="vim"/></entry></feed>