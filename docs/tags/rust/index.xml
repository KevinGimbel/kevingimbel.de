<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on KevOps — DevOps, Cooking, and everything else I want to write about</title>
    <link>https://kevingimbel.de/tags/rust/</link>
    <description>Recent content in rust on KevOps — DevOps, Cooking, and everything else I want to write about</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en_US</language>
    <lastBuildDate>Thu, 03 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevingimbel.de/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a Snake Clone in Rust</title>
      <link>https://kevingimbel.de/blog/2020/12/creating-a-snake-clone-in-rust/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/12/creating-a-snake-clone-in-rust/</guid>
      <description>Amazing step-by-step tutorial on how to create a Snake clone using Rust and the Bevy Game Engine. Definitely an article to bookmark!</description>
    </item>
    
    <item>
      <title>Make a Language</title>
      <link>https://kevingimbel.de/blog/2020/12/make-a-language/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/12/make-a-language/</guid>
      <description>A blog series about making a language using Rust. I really enjoyed this series which is packed with good patterns and ideas on how to parse text into something meaningful.</description>
    </item>
    
    <item>
      <title>Rust Compiler Umgebungsvariablen</title>
      <link>https://kevingimbel.de/blog/2020/09/rust-compiler-umgebungsvariablen/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/09/rust-compiler-umgebungsvariablen/</guid>
      <description>Rust ist eine wunderbare Programmiersprache mit einem gut durchdachten Compiler. Das Rust Team hat sich die Bürde auferlegt, den Compiler so &amp;ldquo;schlau&amp;rdquo; wie möglich zu machen um so viele Fehler schon während dem kompilieren des Codes zu erkennen. Außerdem wird Rust mit einem mächtigen Tool namens cargo ausgeliefert. Cargo ist ähnlich wie npm oder maven und stellt verschiedenste Funktionen bereit, zum Beispiel zum bauen, testen, oder veröffentlichen von Rust Code. In diesem Blog-Beitrag möchte ich auf ein Build Feature von Cargo eingehen: Environment Variables.</description>
    </item>
    
    <item>
      <title>Rust CLI mit Docker ausliefern</title>
      <link>https://kevingimbel.de/blog/2020/08/rust-cli-mit-docker-ausliefern/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/08/rust-cli-mit-docker-ausliefern/</guid>
      <description>Vor kurzem habe ich einen Weg gefunden Rust CLI Programme über Docker auszuliefern. Für meinen Arbeitgeber Synoa habe ich in den letzten Monaten ein CLI Tool erstellt, dass mir - und anderen - die Arbeit mit AWS erleichtert. Diese CLI im Team zu verteilen gestaltete sich als schwierig da weder jeder Rust installiert hat noch eine einfache Integration mit Homebrew möglich war da der Code in einem privaten Repository ist. Die einfachste Lösung war am Ende, die CLI in einen Docker Container zu packen und so zu verteilen.</description>
    </item>
    
    <item>
      <title>Shipping Rust CLIs with Docker</title>
      <link>https://kevingimbel.de/blog/2020/08/shipping-rust-clis-with-docker/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/08/shipping-rust-clis-with-docker/</guid>
      <description>I recently found a nice and clean way of building and distributing Rust CLI apps using docker. For my work I created a Rust app that wraps some AWS SDK functions to make my day-to-day work with AWS easier. This CLI is very focused on the way we work at Synoa and therefore unfortunately not open source. The tech does not matter much, as we can just create a tiny example &amp;ldquo;app&amp;rdquo; for this blog post.</description>
    </item>
    
    <item>
      <title>Deno 1.0 released</title>
      <link>https://kevingimbel.de/blog/2020/05/deno-1.0-released/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/05/deno-1.0-released/</guid>
      <description>Deno made its first stable release with the release of v1!
I&amp;rsquo;ve heard of Deno in the past but I never really cared for it. My work with JavaScript has always been in the browser and I&amp;rsquo;m not too much of a NodeJS fan - mainly because of the security and sandbox aspects of the runtime (or more, the lack of them). Deno aims to do better and fix some (or all?</description>
    </item>
    
  </channel>
</rss>
