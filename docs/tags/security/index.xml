<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on KevOps — DevOps, Cooking, and everything else I want to write about</title><link>https://kevingimbel.de/tags/security/</link><description>Recent content in security on KevOps — DevOps, Cooking, and everything else I want to write about</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Wed, 29 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevingimbel.de/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>No Tracking</title><link>https://kevingimbel.de/blog/2020/01/no-tracking/</link><pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2020/01/no-tracking/</guid><description>I don&amp;rsquo;t track you. That&amp;rsquo;s a promise and a statement, this website works without Tracking.
Inspired by Laura Kalbag, who was inspired by the footer text on Karolina Szczur’s website.
Why The reason I do not use tracking is an idealistic one. I no longer want to collect data for Google, and I do not want to support trackable users across websites.
Data sharing on the web is absolutely crazy, as this example of USAToday shows - GDPR is saving us Europeans again tho.</description></item><item><title>Two Factor Auth, Password managers, and cloud sync</title><link>https://kevingimbel.de/blog/2020/01/two-factor-auth-password-managers-and-cloud-sync/</link><pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2020/01/two-factor-auth-password-managers-and-cloud-sync/</guid><description>For years I have not given much thought to passwords, security, or how to manage my passwords efficiently and securely. I usually would either save them in the browser or just re-use passwords (which of course is the worst). Around 7-8ish years ago I began to use password managers and password generators, and when 2FA became a more common thing I was enabling that on all services I could. 2FA (Two Factor Authentication) is a method of authentication where two parts are needed: A Password and a generated token, this token can be hardware based (e.</description></item><item><title>Auto SSL With apache2</title><link>https://kevingimbel.de/blog/2020/01/auto-ssl-with-apache2/</link><pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2020/01/auto-ssl-with-apache2/</guid><description>Apache 2.4.30 and later supports an experimental module called mod_md which allows automatic SSL certificate management with Let&amp;rsquo;s Encrypt as standard provider. This greatly simplifies the management of SSL certificates. Instead of setting up certbot and cronjobs to automatically renew certs server administrators now only need to add a few lines to their virtual host files.
This guide assumes the operating system is Ubuntu! If you use a different distro some commands may be different.</description></item></channel></rss>