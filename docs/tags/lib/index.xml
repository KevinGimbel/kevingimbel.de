<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lib on KevOps — DevOps, Cooking, and everything else I want to write about</title><link>https://kevingimbel.de/tags/lib/</link><description>Recent content in lib on KevOps — DevOps, Cooking, and everything else I want to write about</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Thu, 04 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevingimbel.de/tags/lib/index.xml" rel="self" type="application/rss+xml"/><item><title>Mip</title><link>https://kevingimbel.de/project/mip/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/project/mip/</guid><description>mip gets the local IP address by requesting http://httpbin.org/ip (or a custom endpoint) and parsing the returned output.
It has 0 dependencies and only relies on the Rust std lib.
Usage Add the following to Cargo.toml.
[dependencies] mip = &amp;#34;0.4.0 Then use it like
use mip::IP; fn main() { println!(&amp;#34;My IP is {}&amp;#34;, IP::is()); } Or without use fn main() { println!(&amp;#34;My IP is {}&amp;#34;, mip::IP::is()); } Custom Endpoint Instead of using httpbin.</description></item></channel></rss>