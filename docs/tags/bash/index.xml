<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on KevOps</title><link>https://kevingimbel.de/tags/bash/</link><description>Recent content in bash on KevOps</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Fri, 24 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevingimbel.de/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Terrasave</title><link>https://kevingimbel.de/blog/2020/04/terrasave/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2020/04/terrasave/</guid><description>I just released a tiny tool function I&amp;rsquo;ve been using for some time called terrasave. It&amp;rsquo;s a Bash / Fish function that prevents you from running terraform without the -target option.
Why does this exist? In terraform it is incredibly easy to destroy things with terraform apply. If you run apply terraform shows a huge output and sometimes you may overlook a thing being &amp;ldquo;replaced&amp;rdquo; instead of updated. Once upon a time I destroyed a MongoDB Atlas Cluster this way and lost all its data, because the &amp;ldquo;must be replaced&amp;rdquo; was hidden in a lot of terraform output and I simply didn&amp;rsquo;t see it.</description></item><item><title>TIL: Bash select</title><link>https://kevingimbel.de/blog/2018/04/til-bash-select/</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2018/04/til-bash-select/</guid><description>I was recently researching different bash prompts and stumbled upon an StackExchange answer which explains the different prompt types (PS1, PS2, PS3, and PS4). The answer explains how the PS3 prompt is used for commands like select. I did not know about select before, so that&amp;rsquo;s the real TIL here!
[&amp;hellip;] PS3 is shown when the select command is waiting for input [&amp;hellip;]
So the PS3 prompt is shown when a bash program is waiting for user input, and it turns out that the select bash command is used for creating a &amp;ldquo;choice&amp;rdquo; UI in bash.</description></item><item><title>Deploy a static site with git</title><link>https://kevingimbel.de/blog/2017/01/deploy-a-static-site-with-git/</link><pubDate>Tue, 17 Jan 2017 21:28:38 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/01/deploy-a-static-site-with-git/</guid><description>If you follow my blog you might recall that I switched from Jekyll hosted on GitHub to Hugo hosted on Uberspace. Beside the fact I had to create a custom Hugo theme for myself and learn how to run a Hugo blog/website I also had to think about how I am going to deploy my website. Hugo is a static site generator and when executed ($ hugo) it compiles the site from Markdown and HTML templates into a public directory with lots of folders and HTML files.</description></item><item><title>Bash script: ws</title><link>https://kevingimbel.de/blog/2017/01/bash-script-ws/</link><pubDate>Thu, 12 Jan 2017 19:22:48 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/01/bash-script-ws/</guid><description>For the past year or so I had a little function in my .bash_profile file which made my interaction with the terminal roughly 9001% better - yeah, over 9000! This little function is called ws and makes switching between projects inside my workspace a lot easier. Both my private and work projects are inside the ~/Development directory. If I want to get to a project I would normally navigate like cd ~/Development/private/github/kevingimbel/kevingimbel.</description></item></channel></rss>