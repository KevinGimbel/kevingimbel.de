<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nodejs on KevOps — DevOps, Cooking, and everything else I want to write about</title><link>https://kevingimbel.de/categories/nodejs/</link><description>Recent content in nodejs on KevOps — DevOps, Cooking, and everything else I want to write about</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Mon, 09 Jan 2017 18:02:48 +0100</lastBuildDate><atom:link href="https://kevingimbel.de/categories/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing NodeJS cli tools</title><link>https://kevingimbel.de/blog/2017/01/writing-nodejs-cli-tools/</link><pubDate>Mon, 09 Jan 2017 18:02:48 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/01/writing-nodejs-cli-tools/</guid><description>Over 2015 and 2016 I got more and more interested in automating my daily workflows with scripts. For this purpose I learned Bash Scripting (or Shell Scripting) and started writing my first scripts to automate repeating tasks, creating apache vhosts files for example. Recently I started exploring how to implement command line tools in NodeJS and this post should give an overview.
Shebang If you already know what a Shebang is skip to the next section</description></item><item><title>Snippet: SASS Source Maps with Gulp</title><link>https://kevingimbel.de/blog/2015/01/snippet-sass-source-maps-with-gulp/</link><pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2015/01/snippet-sass-source-maps-with-gulp/</guid><description>Yesterday I finally took a few moments to implement Source Maps with Gulp for one of our client projects at work. I wanted to use the benefits of Source Maps for quite some time but never actually found the time to wrap my head around it (aka throw in another Gulp plugin). Source Maps are used to connect your pre-compiled files, like Sass, with the later compiled CSS - so inside the Dev Tools you can see for every line of CSS from which Sass file it comes - this is super handy once your project get&amp;rsquo;s bigger!</description></item></channel></rss>