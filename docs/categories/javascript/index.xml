<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on KevOps</title>
    <link>https://kevingimbel.de/categories/javascript/</link>
    <description>Recent content in javascript on KevOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kevingimbel.de/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Snippet: SASS Source Maps with Gulp</title>
      <link>https://kevingimbel.de/blog/2015/01/snippet-sass-source-maps-with-gulp/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2015/01/snippet-sass-source-maps-with-gulp/</guid>
      <description>Yesterday I finally took a few moments to implement Source Maps with Gulp for one of our client projects at work. I wanted to use the benefits of Source Maps for quite some time but never actually found the time to wrap my head around it (aka throw in another Gulp plugin). Source Maps are used to connect your pre-compiled files, like Sass, with the later compiled CSS - so inside the Dev Tools you can see for every line of CSS from which Sass file it comes - this is super handy once your project get&amp;rsquo;s bigger!</description>
    </item>
    
    <item>
      <title>Endless Multi-Dimensional Navigation</title>
      <link>https://kevingimbel.de/blog/2014/08/endless-multi-dimensional-navigation/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/08/endless-multi-dimensional-navigation/</guid>
      <description>The past I decided to get my head around multi-dimensional navigations, like navigations that can have (endless) sub navigations nested inside them and so I started to try some ideas on CodePen. My first idea was to have a trigger element that, when clicked, triggeres the nearest Sub Navigation to activate it (e.g. giving it an open class). The JavaScript for this looks like this:
var d = document, trigger = d.</description>
    </item>
    
    <item>
      <title>A closer look to closure</title>
      <link>https://kevingimbel.de/blog/2014/07/a-closer-look-to-closure/</link>
      <pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/07/a-closer-look-to-closure/</guid>
      <description>Closure is a very interesting concept in JavaScript. It basically determinse where and how variables or functions are accessable and where not. Since this is an essential part of JavaScript and one can run into quite some problems I want to try and give short introduction to closure and what it can be good for. It&amp;rsquo;s good to have at least basic understanding of JavaScript.
So before I start I&amp;rsquo;d like to say that I consider myself a JavaScript beginner and this is how I understand closure and scopes at the moment.</description>
    </item>
    
    <item>
      <title>Passing Arguments in JavaScript</title>
      <link>https://kevingimbel.de/blog/2014/05/passing-arguments-in-javascript/</link>
      <pubDate>Fri, 23 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/05/passing-arguments-in-javascript/</guid>
      <description>One of my favorite aspects of JavaScript is that it is unbelievable flexible. I am currently reading &amp;ldquo;Secrets of the JavaScript Ninja&amp;rdquo; by the amazing John Resig and try to play around with JavaScript whenever I&amp;rsquo;ve the time to do so. Just yesteday I needed to pass as many arguments to a function as the user wants which means I can&amp;rsquo;t check for every possible thingy. Anyway, I&amp;rsquo;ll cover this in a small write-up aka a blog post.</description>
    </item>
    
    <item>
      <title>Pure JavaScript slider</title>
      <link>https://kevingimbel.de/blog/2014/02/pure-javascript-slider/</link>
      <pubDate>Sat, 22 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/02/pure-javascript-slider/</guid>
      <description>The great thing when you&amp;rsquo;re a beginner in any programming language (or in anything in general) is, that even small successes make you happy and proud of what you did. I&amp;rsquo;m very proud of my back to top script even though it&amp;rsquo;s not perfect at all. I could make a back to top button with jQuery in a few minutes but it wouldn&amp;rsquo;t be that much fun. However, I made another JavaScript thing I&amp;rsquo;m proud of: A pure JavaScript slider.</description>
    </item>
    
    <item>
      <title>To infinity and beyond</title>
      <link>https://kevingimbel.de/blog/2013/11/to-infinity-and-beyond/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/11/to-infinity-and-beyond/</guid>
      <description>While I was re-designing my Website I decided to finally add some JavaScript to it. I&amp;rsquo;m learning JavaScript for like 2 months now and - to be honest - I finally understand most of the things I&amp;rsquo;m doing. Yesterday night&amp;rsquo;s topic was a &amp;ldquo;Back to Top&amp;rdquo; Button written in Vanilla JS. Actually the code behind it is kinda simple, however, I wrote an endless function that got to infinity and beyond (that&amp;rsquo;s where the title comes from.</description>
    </item>
    
    <item>
      <title>i-js</title>
      <link>https://kevingimbel.de/blog/2013/10/i-js/</link>
      <pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/10/i-js/</guid>
      <description>Today I decided to dig deeper into JavaScript and experiment a bit with scope, query selection and the general manipulation of the DOM. To do so I set up an object to store all my functions - this is not necessary but definitely more fun.
After naming my Object $ (because I new this from jQuery and I thought it would look cool) I renamed it to I and here comes the fun part: While learning JS I build i.</description>
    </item>
    
  </channel>
</rss>