<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frontend on KevOps</title>
    <link>https://kevingimbel.de/categories/frontend/</link>
    <description>Recent content in frontend on KevOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kevingimbel.de/categories/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Random Theme</title>
      <link>https://kevingimbel.de/blog/2020/03/random-theme/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/03/random-theme/</guid>
      <description>I&amp;rsquo;ve decided to add some randomness to this website! You may noticed that the two main colors change on every page reload - there&amp;rsquo;s a fixed number of &amp;ldquo;themes&amp;rdquo; available and they change at random.
To accomplish this I used the following JavaScript.
(function(window, document, undefined) { let theme = window.localStorage.getItem(&amp;#34;kgde_theme&amp;#34;); console.log(theme); if (theme) { var [colorMain, colorSecondary] = JSON.parse(theme).colors; document.body.style = `--color-main:${colorMain};--color-secondary:${colorSecondary}`; } else { // [dark-color, light-color]  // Color combinations taken from https://botsin.</description>
    </item>
    
    <item>
      <title>Hugo aliases and redirects</title>
      <link>https://kevingimbel.de/blog/2020/01/hugo-aliases-and-redirects/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/01/hugo-aliases-and-redirects/</guid>
      <description>With the recent redesign and re-structuring of my website I decided to include year and month in URLs. I previously only used the post title as URL key, so a post with title Hello world would be available at kevingimbel.de/hello-world. With the new format this includes the section, year, and month, so for example kevingimbel.de/blog/2020/01/hello-world.
To prevent all old URLs from failing with a 404 I added aliases to all old posts.</description>
    </item>
    
    <item>
      <title>Hugo: ignore _index.md in list templates</title>
      <link>https://kevingimbel.de/blog/2020/01/hugo-ignore-_index.md-in-list-templates/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/01/hugo-ignore-_index.md-in-list-templates/</guid>
      <description>While creating my new website I also added more sections, namely a blog, photography, and art section. All of these use list templates and render &amp;ldquo;article&amp;rdquo;-like content previews. I wanted to add some content to these lists and Hugo has a special file named _index.md for that. This file can be used to create index pages for lists.
When I did that I somehow also included the index files in the post listings which was not what I wanted, so I added a if statement to my article-preview.</description>
    </item>
    
    <item>
      <title>Hugo: compare dates to flag old content</title>
      <link>https://kevingimbel.de/blog/2020/01/hugo-compare-dates-to-flag-old-content/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/01/hugo-compare-dates-to-flag-old-content/</guid>
      <description>With the recent redesign of my website I also wanted to add a note to old articles. The IT world is changing fast and information can quickly be outdated, so I decided to add an automatically generated note to every post that is older than 4 years. Using the Hugo Math function and Date values it can be accomplished in automated-enough fashion.
Partial First I created a new partial named single-header.</description>
    </item>
    
    <item>
      <title>Safe calc usage in CSS</title>
      <link>https://kevingimbel.de/blog/2020/01/safe-calc-usage-in-css/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2020/01/safe-calc-usage-in-css/</guid>
      <description>calc is a great CSS function to calculate values, e.g. margins or widths. What makes it especially great is that it can combine different values, for example calc(100% - 4rem - 1px) is valid and works in modern browsers - in simpler words: Calc works with different units like em, %, px, etc.
The problem with calc is that if it doesn&amp;rsquo;t work you may get a unexpected result. Take the following code for example:</description>
    </item>
    
    <item>
      <title>Mastodon Embed Shortcode for hugo</title>
      <link>https://kevingimbel.de/blog/2018/09/mastodon-embed-shortcode-for-hugo/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2018/09/mastodon-embed-shortcode-for-hugo/</guid>
      <description>You may know that I made some shortcodes for Hugo, the static site generator I am using to create this website. So far I made a shortcode for caniuse.com and codepen.io which allow to embed CodePen and &amp;ldquo;Can I Use&amp;rdquo; embeds easily with Hugos build-in Shortcode system.
Today I made another one which allows embeds from Mastodon, the decentralized Twitter-like social network. An example embed is shown below.
 The Source Code can be found on GitHub.</description>
    </item>
    
    <item>
      <title>CSS Custom Properties and a new look</title>
      <link>https://kevingimbel.de/blog/2017/11/css-custom-properties-and-a-new-look/</link>
      <pubDate>Sun, 26 Nov 2017 10:56:13 +0100</pubDate>
      
      <guid>https://kevingimbel.de/blog/2017/11/css-custom-properties-and-a-new-look/</guid>
      <description>You may have noticed that some things changed on this website. I completly re-wrote the Front-End and created a new theme with a focus on accessibility and well-structured content. On the web, Accessibility is enabled by default; All you need is a good HTML structure and your website is almost ready to go! A second important part of accessibility is color and contrast as well as font sizing. I decided to let users choose their own color scheme, font-size, and dark or light mode - all done with CSS Custom Properties (aka CSS variables).</description>
    </item>
    
    <item>
      <title>ReactJS - Hello World!</title>
      <link>https://kevingimbel.de/blog/2015/05/reactjs-hello-world/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2015/05/reactjs-hello-world/</guid>
      <description>This article is the first in a series about ReactJS, a JavaScript library for building user interfaces. It is actively developed at Facebook and Instagram, while Instagram uses React to build their web app. At Facebook, however, React plays a role in the &amp;ldquo;background&amp;rdquo;, featuring administrative screens such as the Ads Managment.
React itself says one very important and true thing about itself:
 Lots of people use React as the V in MVC.</description>
    </item>
    
    <item>
      <title>Getting into Performance Measurement</title>
      <link>https://kevingimbel.de/blog/2015/03/getting-into-performance-measurement/</link>
      <pubDate>Tue, 10 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2015/03/getting-into-performance-measurement/</guid>
      <description>I&amp;rsquo;ve spent the past week developing some features for our own website at work. We&amp;rsquo;re using WordPress and I almost always enjoy working with WordPress beside Magento projects, it&amp;rsquo;s way easier to keep an overview and with a good overview of data flow and available data it&amp;rsquo;s easier to measure and find performance bottleneck. In the following post I want to examine my workflow and the way I refactored our code base to increase the speed and overall performance of our site.</description>
    </item>
    
    <item>
      <title>Snippet: theme-color for Android 5.0</title>
      <link>https://kevingimbel.de/blog/2014/11/snippet-theme-color-for-android-5.0/</link>
      <pubDate>Fri, 21 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/11/snippet-theme-color-for-android-5.0/</guid>
      <description>Just yesterday I got my Android 5.0 update which also features a new way multi-tasking works and Chrome interacts with this multi-tasking. In fact, all recently opened tabs are available via the multi-tasking button (square to the down right on Stock Android) instead of an in-app button like it used to be. This not only is very handy actually since you can switch between apps and websites seamlessly you can also set your own status bar colors for chrome which are used on the page and in the multi-tasking overview.</description>
    </item>
    
    <item>
      <title>Endless Multi-Dimensional Navigation</title>
      <link>https://kevingimbel.de/blog/2014/08/endless-multi-dimensional-navigation/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/08/endless-multi-dimensional-navigation/</guid>
      <description>The past I decided to get my head around multi-dimensional navigations, like navigations that can have (endless) sub navigations nested inside them and so I started to try some ideas on CodePen. My first idea was to have a trigger element that, when clicked, triggeres the nearest Sub Navigation to activate it (e.g. giving it an open class). The JavaScript for this looks like this:
var d = document, trigger = d.</description>
    </item>
    
    <item>
      <title>Conditional CSS</title>
      <link>https://kevingimbel.de/blog/2014/07/conditional-css/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/07/conditional-css/</guid>
      <description>While there&amp;rsquo;s a lot of talking about CSS writing styles, organization styles and if it&amp;rsquo;s maybe better or not to avoid pre-processors or frameworks there&amp;rsquo;s one very powerful thing that gets pretty much no attention at all: Conditional CSS, i.e. pieces of CSS that serve one specific task the easiest and most known is .active given to, well, active elements. I&amp;rsquo;d like to talk a bit about conditional CSS that I&amp;rsquo;ve been using in production and that I think can improve the overall logic of CSS.</description>
    </item>
    
    <item>
      <title>Passing Arguments in JavaScript</title>
      <link>https://kevingimbel.de/blog/2014/05/passing-arguments-in-javascript/</link>
      <pubDate>Fri, 23 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/05/passing-arguments-in-javascript/</guid>
      <description>One of my favorite aspects of JavaScript is that it is unbelievable flexible. I am currently reading &amp;ldquo;Secrets of the JavaScript Ninja&amp;rdquo; by the amazing John Resig and try to play around with JavaScript whenever I&amp;rsquo;ve the time to do so. Just yesteday I needed to pass as many arguments to a function as the user wants which means I can&amp;rsquo;t check for every possible thingy. Anyway, I&amp;rsquo;ll cover this in a small write-up aka a blog post.</description>
    </item>
    
    <item>
      <title>Pure JavaScript slider</title>
      <link>https://kevingimbel.de/blog/2014/02/pure-javascript-slider/</link>
      <pubDate>Sat, 22 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/02/pure-javascript-slider/</guid>
      <description>The great thing when you&amp;rsquo;re a beginner in any programming language (or in anything in general) is, that even small successes make you happy and proud of what you did. I&amp;rsquo;m very proud of my back to top script even though it&amp;rsquo;s not perfect at all. I could make a back to top button with jQuery in a few minutes but it wouldn&amp;rsquo;t be that much fun. However, I made another JavaScript thing I&amp;rsquo;m proud of: A pure JavaScript slider.</description>
    </item>
    
    <item>
      <title>Bullgit loves Jekyll</title>
      <link>https://kevingimbel.de/blog/2014/01/bullgit-loves-jekyll/</link>
      <pubDate>Mon, 06 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/01/bullgit-loves-jekyll/</guid>
      <description>After having a static HTML Page for about 6 months, we at bullgit just switched to a brand-new Jekyll page that uses the GitHub API to display all our repos as well as a list of members with images and links and there are a few reasons why we made this switch:
 Jekyll is built-in GitHub pages Jekyll is easy-to-learn and easy to maintain No-Database handling of Data (see the list of members we use) Everyone can clone the repo and run it locally  So basically, as soon as you have a Project on GitHub or an organization like bullgit you can use the power of Jekyll to make your page easy to use and easy to change even for new members.</description>
    </item>
    
    <item>
      <title>Web Development in 2014</title>
      <link>https://kevingimbel.de/blog/2014/01/web-development-in-2014/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2014/01/web-development-in-2014/</guid>
      <description>As soon as you start to really dig into web development it feels like things would change daily - at least I feel that way. But there&amp;rsquo;s one thing that I&amp;rsquo;d like everyone to do in 2014: At least basic responsive web development to ensure your site - at least - looks good and is usable on whatever screen it will be displayed. There&amp;rsquo;s nothing I hate more than scrolling websites around on my phone when I want to read an article (to be honest, I mostly leave the site and never come back).</description>
    </item>
    
    <item>
      <title>Pseudo Product Flags</title>
      <link>https://kevingimbel.de/blog/2013/11/pseudo-product-flags/</link>
      <pubDate>Sun, 24 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/11/pseudo-product-flags/</guid>
      <description>For a recent client Project I had to create Product Flags that are displayed at the top of each product. The Flags should have different colors and different values (which also have different lengths). The values are applied via the data Attribute and the colors are also controlled via a data Attribute. The &amp;ldquo;Problem&amp;rdquo; with this task was that it&amp;rsquo;s not only a few different length, it&amp;rsquo;s a multi-language system and therefore can end up in a lot of different width of the product flags - a &amp;ldquo;fixed&amp;rdquo; solution, like applying a max-width of let&amp;rsquo;s say 20em, isn&amp;rsquo;t the best solution for this so I ended up creating a flexible solution.</description>
    </item>
    
    <item>
      <title>To infinity and beyond</title>
      <link>https://kevingimbel.de/blog/2013/11/to-infinity-and-beyond/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/11/to-infinity-and-beyond/</guid>
      <description>While I was re-designing my Website I decided to finally add some JavaScript to it. I&amp;rsquo;m learning JavaScript for like 2 months now and - to be honest - I finally understand most of the things I&amp;rsquo;m doing. Yesterday night&amp;rsquo;s topic was a &amp;ldquo;Back to Top&amp;rdquo; Button written in Vanilla JS. Actually the code behind it is kinda simple, however, I wrote an endless function that got to infinity and beyond (that&amp;rsquo;s where the title comes from.</description>
    </item>
    
    <item>
      <title>Custom Radio Buttons</title>
      <link>https://kevingimbel.de/blog/2013/10/custom-radio-buttons/</link>
      <pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/10/custom-radio-buttons/</guid>
      <description>Today I thought about a project I had in mind for some time, it has to do with ratings of different contents and the first thing I thought about was: What&amp;rsquo;s the easiest or best way to create a rating form with custom buttons (stars, hearts, whatever).
A few years ago I had to do this once and I remember doing it with an image and background-position but as of today I really love pseudo elements and &amp;ldquo;Look-Ma-No-Image!</description>
    </item>
    
    <item>
      <title>Ghost in the shell</title>
      <link>https://kevingimbel.de/blog/2013/10/ghost-in-the-shell/</link>
      <pubDate>Wed, 16 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/10/ghost-in-the-shell/</guid>
      <description>Finally Ghost launched to the public! I waited for this CMS since I first heard of, at this time my blog was running on WordPress which always felt overloaded. WordPress has a lot of functions and stuff I don&amp;rsquo;t need when publishing a few articles a month to the Internet. However, I switched to Jekyll as you may know and now there is Ghost. It felt like it&amp;rsquo;d be my birthday while unpacking the *.</description>
    </item>
    
    <item>
      <title>From 0 To Sass</title>
      <link>https://kevingimbel.de/blog/2013/10/from-0-to-sass/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/10/from-0-to-sass/</guid>
      <description>If you&amp;rsquo;re a Front-End Developer you may have already heard about Pre-Processors such as Sass, LESS or Stylus. It&amp;rsquo;s fair to say that they&amp;rsquo;re all good and which one you use is up to you or your team. I prefer Sass with the SCSS Syntax (= keeps semicolons and brackets).
Even though Pre-Processors are easy to use and setup some people are still confused: Do I have to run them on a server?</description>
    </item>
    
    <item>
      <title>A bit sticky</title>
      <link>https://kevingimbel.de/blog/2013/09/a-bit-sticky/</link>
      <pubDate>Fri, 20 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/09/a-bit-sticky/</guid>
      <description>I just stumbled upon a very handy CSS Property: position:sticky. As far as I found out it&amp;rsquo;s only working in Chrome and Chromium with the experimental Webkit Features Flag enabled (see at chrome://flags/#enable-experimental-webkit-features).
position:sticky is a pretty handy feature that allows you to stick an element to the top of the page (or wherever you want) until the parent element is moved out of the screen.
Basic Markup To get an idea of how position:sticky works I made some basic markup.</description>
    </item>
    
    <item>
      <title>Is this :valid?</title>
      <link>https://kevingimbel.de/blog/2013/08/is-this-valid/</link>
      <pubDate>Fri, 16 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/08/is-this-valid/</guid>
      <description>I recently stumbled upon the :valid and :invalid class for input fields. It gives you the ability to use visual feedback on inputs that show the user whether the input is - guess what? - valid or not. This is, in fact, a very handy pseudo class in case of UI and UX Design because you can easily give a feedback on input without using JavaScript. Anyway, this pseudo element does not validate the input, the entered email for example can still be formated wrong.</description>
    </item>
    
    <item>
      <title>px vs em</title>
      <link>https://kevingimbel.de/blog/2013/08/px-vs-em/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kevingimbel.de/blog/2013/08/px-vs-em/</guid>
      <description>Recently Tim Pietrusky wrote and article about px vs em that contains a few links on resources that explain why you should use em instead of px as measure unit on websites.
I was using pixel like forever and I couldn&amp;rsquo;t think of any reason to switch to a new unit until Tim explained why em is better: em is more responsive and it is scalable. In fact when you switch from pixel to em you&amp;rsquo;ll feel like working on a completely new Level.</description>
    </item>
    
  </channel>
</rss>