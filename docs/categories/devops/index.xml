<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on KevOps — DevOps, Cooking, and everything else I want to write about</title><link>https://kevingimbel.de/categories/devops/</link><description>Recent content in devops on KevOps — DevOps, Cooking, and everything else I want to write about</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Wed, 18 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://kevingimbel.de/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>TIL: Bash select</title><link>https://kevingimbel.de/blog/2018/04/til-bash-select/</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><guid>https://kevingimbel.de/blog/2018/04/til-bash-select/</guid><description>I was recently researching different bash prompts and stumbled upon an StackExchange answer which explains the different prompt types (PS1, PS2, PS3, and PS4). The answer explains how the PS3 prompt is used for commands like select. I did not know about select before, so that&amp;rsquo;s the real TIL here!
[&amp;hellip;] PS3 is shown when the select command is waiting for input [&amp;hellip;]
So the PS3 prompt is shown when a bash program is waiting for user input, and it turns out that the select bash command is used for creating a &amp;ldquo;choice&amp;rdquo; UI in bash.</description></item><item><title>Using the Terminal: The Prompt</title><link>https://kevingimbel.de/blog/2017/03/using-the-terminal-the-prompt/</link><pubDate>Wed, 29 Mar 2017 18:34:37 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/03/using-the-terminal-the-prompt/</guid><description>The Terminal (or bash, shell, console) is an incredibly powerful program available on (almost) all operating systems such as Mac OS, Windows, or Linux Distributions like Ubuntu, Mint, Fedora, CentOS, &amp;hellip; - you get the picture. Using the terminal in an efficient way to navigate the computer or writing your own programs and snippets to enhance your workflows is incredibly powerful. I already wrote about one custom script named ws which enhances my daily workflows.</description></item><item><title>Deploy a static site with git</title><link>https://kevingimbel.de/blog/2017/01/deploy-a-static-site-with-git/</link><pubDate>Tue, 17 Jan 2017 21:28:38 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/01/deploy-a-static-site-with-git/</guid><description>If you follow my blog you might recall that I switched from Jekyll hosted on GitHub to Hugo hosted on Uberspace. Beside the fact I had to create a custom Hugo theme for myself and learn how to run a Hugo blog/website I also had to think about how I am going to deploy my website. Hugo is a static site generator and when executed ($ hugo) it compiles the site from Markdown and HTML templates into a public directory with lots of folders and HTML files.</description></item><item><title>Bash script: ws</title><link>https://kevingimbel.de/blog/2017/01/bash-script-ws/</link><pubDate>Thu, 12 Jan 2017 19:22:48 +0100</pubDate><guid>https://kevingimbel.de/blog/2017/01/bash-script-ws/</guid><description>For the past year or so I had a little function in my .bash_profile file which made my interaction with the terminal roughly 9001% better - yeah, over 9000! This little function is called ws and makes switching between projects inside my workspace a lot easier. Both my private and work projects are inside the ~/Development directory. If I want to get to a project I would normally navigate like cd ~/Development/private/github/kevingimbel/kevingimbel.</description></item><item><title>Gotcha: dockerignore</title><link>https://kevingimbel.de/blog/2016/12/gotcha-dockerignore/</link><pubDate>Wed, 21 Dec 2016 18:02:42 +0100</pubDate><guid>https://kevingimbel.de/blog/2016/12/gotcha-dockerignore/</guid><description>Today I was caught off-guard by a docker &amp;ldquo;bug&amp;rdquo; - or so I thought at first. I tried to boot up a project with docker-compose up like I do since switching to a Mac. Unusual was that docker-compose stopped at the build step and would not finish the boot. After some confusion and after checking the projects docker-compose.yml configuration file I went to GitHub to see the newest docker for mac issues because I was using the beta release and thought a recent update might broke a thing or two.</description></item></channel></rss>